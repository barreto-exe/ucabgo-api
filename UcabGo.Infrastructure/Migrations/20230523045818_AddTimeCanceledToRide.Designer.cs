// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UcabGo.Infrastructure.Data;

#nullable disable

namespace UcabGo.Infrastructure.Migrations
{
    [DbContext(typeof(UcabgoContext))]
    [Migration("20230523045818_AddTimeCanceledToRide")]
    partial class AddTimeCanceledToRide
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("latin1_swedish_ci")
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "latin1");

            modelBuilder.Entity("UcabGo.Core.Entities.Destination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasComment(" ");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Detail")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<ulong?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'0'");

                    b.Property<float>("Latitude")
                        .HasColumnType("float");

                    b.Property<float>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("User")
                        .HasColumnType("int(11)");

                    b.Property<string>("Zone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "User" }, "User");

                    b.ToTable("destinations", (string)null);
                });

            modelBuilder.Entity("UcabGo.Core.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Detail")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<float>("Latitude")
                        .HasColumnType("float");

                    b.Property<float>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("User")
                        .HasColumnType("int(11)");

                    b.Property<string>("Zone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "User" }, "User")
                        .HasDatabaseName("User1");

                    b.ToTable("locations", (string)null);
                });

            modelBuilder.Entity("UcabGo.Core.Entities.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int>("InitialLocation")
                        .HasColumnType("int(11)");

                    b.Property<ulong>("IsAccepted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'0'");

                    b.Property<int>("Passenger1")
                        .HasColumnType("int(11)")
                        .HasColumnName("Passenger");

                    b.Property<int>("Ride")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("TimeAccepted")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("TimeSolicited")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "InitialLocation" }, "InitialLocation");

                    b.HasIndex(new[] { "Passenger1" }, "Passenger");

                    b.HasIndex(new[] { "Ride" }, "Ride");

                    b.ToTable("passenger", (string)null);
                });

            modelBuilder.Entity("UcabGo.Core.Entities.Ride", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int>("Destination")
                        .HasColumnType("int(11)");

                    b.Property<int>("Driver")
                        .HasColumnType("int(11)");

                    b.Property<ulong>("IsAvailable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("b'0'");

                    b.Property<float>("LatitudeOrigin")
                        .HasColumnType("float");

                    b.Property<float>("LongitudeOrigin")
                        .HasColumnType("float");

                    b.Property<int>("SeatQuantity")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("TimeCanceled")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeEnded")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeStarted")
                        .HasColumnType("datetime");

                    b.Property<int>("Vehicle")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Destination" }, "Destination");

                    b.HasIndex(new[] { "Driver" }, "Driver");

                    b.HasIndex(new[] { "Vehicle" }, "Vehicle");

                    b.ToTable("ride", (string)null);
                });

            modelBuilder.Entity("UcabGo.Core.Entities.Soscontact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("User")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "User" }, "IdUser");

                    b.ToTable("soscontact", (string)null);
                });

            modelBuilder.Entity("UcabGo.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SecondLastName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SecondName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("UcabGo.Core.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("User")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "User" }, "IdUser")
                        .HasDatabaseName("IdUser1");

                    b.ToTable("vehicle", (string)null);
                });

            modelBuilder.Entity("UcabGo.Core.Entities.Destination", b =>
                {
                    b.HasOne("UcabGo.Core.Entities.User", "UserNavigation")
                        .WithMany("Destinations")
                        .HasForeignKey("User")
                        .IsRequired()
                        .HasConstraintName("destinations_ibfk_1");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("UcabGo.Core.Entities.Location", b =>
                {
                    b.HasOne("UcabGo.Core.Entities.User", "UserNavigation")
                        .WithMany("Locations")
                        .HasForeignKey("User")
                        .IsRequired()
                        .HasConstraintName("locations_ibfk_1");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("UcabGo.Core.Entities.Passenger", b =>
                {
                    b.HasOne("UcabGo.Core.Entities.Location", "InitialLocationNavigation")
                        .WithMany("Passengers")
                        .HasForeignKey("InitialLocation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("passenger_ibfk_3");

                    b.HasOne("UcabGo.Core.Entities.User", "Passenger1Navigation")
                        .WithMany("Passengers")
                        .HasForeignKey("Passenger1")
                        .IsRequired()
                        .HasConstraintName("passenger_ibfk_2");

                    b.HasOne("UcabGo.Core.Entities.Ride", "RideNavigation")
                        .WithMany("Passengers")
                        .HasForeignKey("Ride")
                        .IsRequired()
                        .HasConstraintName("passenger_ibfk_1");

                    b.Navigation("InitialLocationNavigation");

                    b.Navigation("Passenger1Navigation");

                    b.Navigation("RideNavigation");
                });

            modelBuilder.Entity("UcabGo.Core.Entities.Ride", b =>
                {
                    b.HasOne("UcabGo.Core.Entities.Destination", "DestinationNavigation")
                        .WithMany("Rides")
                        .HasForeignKey("Destination")
                        .IsRequired()
                        .HasConstraintName("ride_ibfk_3");

                    b.HasOne("UcabGo.Core.Entities.User", "DriverNavigation")
                        .WithMany("Rides")
                        .HasForeignKey("Driver")
                        .IsRequired()
                        .HasConstraintName("ride_ibfk_1");

                    b.HasOne("UcabGo.Core.Entities.Vehicle", "VehicleNavigation")
                        .WithMany("Rides")
                        .HasForeignKey("Vehicle")
                        .IsRequired()
                        .HasConstraintName("ride_ibfk_2");

                    b.Navigation("DestinationNavigation");

                    b.Navigation("DriverNavigation");

                    b.Navigation("VehicleNavigation");
                });

            modelBuilder.Entity("UcabGo.Core.Entities.Soscontact", b =>
                {
                    b.HasOne("UcabGo.Core.Entities.User", "UserNavigation")
                        .WithMany("Soscontacts")
                        .HasForeignKey("User")
                        .IsRequired()
                        .HasConstraintName("soscontact_ibfk_1");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("UcabGo.Core.Entities.Vehicle", b =>
                {
                    b.HasOne("UcabGo.Core.Entities.User", "UserNavigation")
                        .WithMany("Vehicles")
                        .HasForeignKey("User")
                        .IsRequired()
                        .HasConstraintName("vehicle_ibfk_1");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("UcabGo.Core.Entities.Destination", b =>
                {
                    b.Navigation("Rides");
                });

            modelBuilder.Entity("UcabGo.Core.Entities.Location", b =>
                {
                    b.Navigation("Passengers");
                });

            modelBuilder.Entity("UcabGo.Core.Entities.Ride", b =>
                {
                    b.Navigation("Passengers");
                });

            modelBuilder.Entity("UcabGo.Core.Entities.User", b =>
                {
                    b.Navigation("Destinations");

                    b.Navigation("Locations");

                    b.Navigation("Passengers");

                    b.Navigation("Rides");

                    b.Navigation("Soscontacts");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("UcabGo.Core.Entities.Vehicle", b =>
                {
                    b.Navigation("Rides");
                });
#pragma warning restore 612, 618
        }
    }
}
